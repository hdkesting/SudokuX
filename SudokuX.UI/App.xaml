<Application x:Class="SudokuX.UI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Style TargetType ="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        
                        <Border 
                           x:Name="Border"  
                           CornerRadius="4" 
                           BorderThickness="1"
                           Background="#20FFFFFF"   
                           BorderBrush="#404040">
                            <ContentPresenter 
                                 Margin="2"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#202020" />
                            </Trigger>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#202020" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#40FFFFFF" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#80FFFFFF" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="#606060" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType ="{x:Type Expander}">
            <!--<Setter Property ="Background" Value="{StaticResource ControlGradient}"/>-->
            <Setter Property ="Padding" Value ="10"/>
            <Setter Property ="BorderBrush" Value ="DimGray"/>
            <Setter Property ="BorderThickness" Value ="1"/>
            <Setter Property ="Margin" Value ="5"/>
            <Setter Property ="HorizontalContentAlignment" Value ="Stretch"/>
            <Setter Property ="Foreground" Value ="White"/>
            <Setter Property ="VerticalContentAlignment" Value ="Stretch"/>
            <!--
            <Setter Property ="BitmapEffect">
                <Setter.Value>
                    <DropShadowBitmapEffect Opacity ="0.5"/>
                </Setter.Value> 
            </Setter>
            -->
            <Setter Property ="Template">
                <Setter.Value>
                    <ControlTemplate TargetType ="{x:Type Expander}">
                        <Grid>
                            <Border BorderBrush="{TemplateBinding Border.BorderBrush}" Margin ="1" CornerRadius="3,3,3,3" 
                                    BorderThickness="{TemplateBinding Border.BorderThickness}" 
                                    Background="White" SnapsToDevicePixels="True">
                                <Border.BitmapEffect>
                                    <DropShadowBitmapEffect Opacity ="0.5"/>
                                </Border.BitmapEffect>
                            </Border>
                            <Border x:Name ="MainBorder" BorderBrush="{TemplateBinding Border.BorderBrush}" CornerRadius="3,3,3,3" 
                                  BorderThickness="{TemplateBinding Border.BorderThickness}" 
                                  Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True">
                                <DockPanel>
                                    <ToggleButton IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            MinWidth="0" Margin="3" FontWeight="{TemplateBinding TextElement.FontWeight}" 
                                            HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
                                            FontStretch="{TemplateBinding TextElement.FontStretch}" VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}" 
                                            Foreground="{TemplateBinding TextElement.Foreground}" FontFamily="{TemplateBinding TextElement.FontFamily}" 
                                            x:Name="HeaderSite" FontStyle="{TemplateBinding TextElement.FontStyle}" FontSize="{TemplateBinding TextElement.FontSize}" 
                                            MinHeight="0" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" 
                                            Content="{TemplateBinding HeaderedContentControl.Header}" DockPanel.Dock="Top">
                                        <ToggleButton.Template>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Border Padding="{TemplateBinding Control.Padding}">
                                                    <Grid Background="#00FFFFFF" SnapsToDevicePixels="False">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="19" />
                                                            <ColumnDefinition Width="Auto" />
                                                        </Grid.ColumnDefinitions>
                                                        <Ellipse Height="19" Width="19" HorizontalAlignment="Center" Fill="{DynamicResource ButtonNormalBackgroundFill}" Name="circle" VerticalAlignment="Center" Stroke="#FFA9A9A9" />
                                                        <Ellipse x:Name ="BackGrad" Height="19" Width="19" HorizontalAlignment="Center" VerticalAlignment ="Center" StrokeThickness="1" Stroke ="DarkBlue">
                                                            <Ellipse.Fill>
                                                                <LinearGradientBrush StartPoint ="0,0" EndPoint ="0,1">
                                                                    <GradientStop Color ="LightSkyBlue" Offset ="0"/>
                                                                    <GradientStop Color ="Blue" Offset ="0.5"/>
                                                                    <GradientStop Color ="LightSkyBlue" Offset ="1"/>
                                                                </LinearGradientBrush>
                                                            </Ellipse.Fill>
                                                        </Ellipse>
                                                        <Ellipse Height="19" Width="19" HorizontalAlignment="Center" VerticalAlignment ="Center" Stroke ="Transparent"  x:Name ="FadeMask" StrokeThickness="1" Opacity ="0">
                                                            <Ellipse.Fill>
                                                                <SolidColorBrush Color ="AliceBlue"/>
                                                            </Ellipse.Fill>
                                                        </Ellipse>
                                                        <Path Stroke="White" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="arrow" SnapsToDevicePixels="False" Data="M1,1.5 L4.5,5 8,1.5"/>
                                                        <Ellipse Height="19" Width="19" HorizontalAlignment="Center" VerticalAlignment ="Center" x:Name ="Highlight" StrokeThickness ="2" Stroke ="Transparent">
                                                            <Ellipse.Fill>
                                                                <DrawingBrush>
                                                                    <DrawingBrush.Drawing>
                                                                        <GeometryDrawing>
                                                                            <GeometryDrawing.Brush>
                                                                                <LinearGradientBrush Opacity ="0.6" StartPoint ="0,0" EndPoint ="0,1">
                                                                                    <GradientStop Color ="White" Offset ="0"/>
                                                                                    <GradientStop Color ="#CCFFFFFF" Offset ="1"/>
                                                                                </LinearGradientBrush>
                                                                            </GeometryDrawing.Brush>
                                                                            <GeometryDrawing.Geometry>
                                                                                <EllipseGeometry Center ="0.5,0.5" RadiusX ="0.25" RadiusY ="0.5"/>
                                                                            </GeometryDrawing.Geometry>
                                                                        </GeometryDrawing>
                                                                    </DrawingBrush.Drawing>
                                                                    <DrawingBrush.RelativeTransform>
                                                                        <ScaleTransform CenterX ="0.5" CenterY ="0" ScaleX ="1.05" ScaleY ="0.6"/>
                                                                    </DrawingBrush.RelativeTransform>
                                                                </DrawingBrush>
                                                            </Ellipse.Fill>
                                                        </Ellipse>
                                                        <ContentPresenter Margin="4,0,0,0" HorizontalAlignment="Left" x:Name="ContentSite" 
                                                              VerticalAlignment="Center" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" 
                                                              RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" Grid.Column="1" />
                                                    </Grid>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="ToggleButton.IsChecked" Value="True">
                                                        <Setter Property="LayoutTransform" TargetName="arrow">
                                                            <Setter.Value>
                                                                <ScaleTransform ScaleY ="-1"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Trigger>
                                                    <Trigger Property ="ToggleButton.IsPressed" Value ="True">
                                                        <Setter TargetName ="BackGrad"  Property ="RenderTransform">
                                                            <Setter.Value>
                                                                <TranslateTransform X ="0" Y ="1"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Trigger>
                                                    <EventTrigger RoutedEvent ="UIElement.MouseEnter">
                                                        <EventTrigger.Actions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetName ="FadeMask" Storyboard.TargetProperty ="Opacity" To ="0.4" Duration ="0:0:0.25"/>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger.Actions>
                                                    </EventTrigger>
                                                    <EventTrigger RoutedEvent ="UIElement.MouseLeave">
                                                        <EventTrigger.Actions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetName ="FadeMask" Storyboard.TargetProperty ="Opacity" To ="0" Duration ="0:0:0.25"/>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger.Actions>
                                                    </EventTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </ToggleButton.Template>
                                    </ToggleButton>
                                    <Border x:Name="ExpandSite" Margin ="5,0,5,5" Background ="#77FFFFFF" BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}">
                                        <Border.LayoutTransform>
                                            <ScaleTransform ScaleY ="0"/>
                                        </Border.LayoutTransform>
                                        <ContentPresenter Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                               VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" 
                                              Focusable="False" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                              Content="{TemplateBinding ContentControl.Content}" DockPanel.Dock="Bottom">
                                        </ContentPresenter>
                                    </Border >
                                </DockPanel>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Expander.IsExpanded" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName ="ExpandSite" Storyboard.TargetProperty ="LayoutTransform.ScaleY" To ="1" Duration ="0:0:0.5"/>
                                            <DoubleAnimation Storyboard.TargetName ="ExpandSite" Storyboard.TargetProperty="Opacity" To ="1" Duration ="0:0:0.5"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName ="ExpandSite" Storyboard.TargetProperty ="LayoutTransform.ScaleY" To ="0" Duration ="0:0:0.5"/>
                                            <DoubleAnimation Storyboard.TargetName ="ExpandSite" Storyboard.TargetProperty="Opacity" To ="0" Duration ="0:0:0.5"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--<Style TargetType="{x:Type ComboBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Border 
                           x:Name="Border"  
                           CornerRadius="4" 
                           BorderThickness="1"
                           Background="#20FFFFFF"   
                           BorderBrush="#404040">
                            <ContentPresenter 
                                 Margin="2"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 RecognizesAccessKey="True"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#202020" />
                            </Trigger>
                             <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#40FFFFFF" />
                            </Trigger>
                             <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
    </Application.Resources>
</Application>
